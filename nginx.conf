server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 6;
    gzip_min_length 1000;

    # Handle API requests - return 503 Service Unavailable since backend is not configured yet
    location /api/ {
        # Return a 503 error for API requests since backend is not configured
        return 503 '{"error": "Backend service is not available"}';
        add_header Content-Type application/json;
        
        # Uncomment below and comment out the return statement above when backend is available
        # proxy_pass http://backend:8080;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_cache_bypass $http_upgrade;
        # proxy_intercept_errors on;
        # error_page 502 503 504 = @backend_down;
    }

    # Handle backend down scenario
    location @backend_down {
        return 503 '{"error": "Backend service is temporarily unavailable"}';
        add_header Content-Type application/json;
    }

    # Handle static assets with cache control
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }

    # Handle React routing - serve index.html for any path not found
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 